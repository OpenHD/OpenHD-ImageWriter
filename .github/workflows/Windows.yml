name: OpenHD Image Writer Windows

on:
  push:
    branches:
      - "2.5-evo"
      - "dev-release"
      - "release"
      - "debug_older"
    paths-ignore:
      - '**.md'
      - '**.asciidoc'
      - '**.adoc'
      - '.gitignore'
      - 'LICENSE'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    defaults:
      run:
        working-directory: src

    steps:
    - uses: actions/checkout@v3

    - name: Install Qt
      id: qt-install
      uses: jurplel/install-qt-action@v4
      with:
        version: '5.15.2'
        aqtversion: '==3.1.*'
        host: windows
        target: desktop
        arch: win32_mingw81
        setup-python: false
        tools: tools_cmake tools_mingw81,qt.tools.win32_mingw810
    
    - name: Install OpenSSL 32-bit (Verified from SLP)
      shell: pwsh
      run: |
          $script = @"
          ################################################################################
          ##  File:  Install-OpenSSL.ps1
          ##  Desc:  Install win32-openssl with checksum verification
          ################################################################################
          
          $arch = 'INTEL'
          $bits = '32'
          $light = $false
          $installer = "exe"
          $version = '3.1.4'
          $installDir = "$Env:ProgramFiles\OpenSSL"
          
          $jsonUrl = 'https://raw.githubusercontent.com/slproweb/opensslhashes/master/win32_openssl_hashes.json'
          $installersAvailable = (Invoke-RestMethod $jsonUrl).files
          
          $distributor_file_hash = $null
          $installerUrl = $null
          $installerName = $null
          
          $installersAvailable | Get-Member -MemberType NoteProperty | ForEach-Object {
            $key = $_.Name
            $entry = $installersAvailable.$key
            if(($entry.light -eq $light) -and ($entry.arch -eq $arch) -and ($entry.bits -eq $bits) -and ($entry.installer -eq $installer) -and ($entry.basever -eq $version)) {
              $installerUrl = $entry.url
              $installerName = $key
              $distributor_file_hash = $entry.sha512
            }
          }
          
          if (-not $installerUrl) {
            Write-Host "‚ùå Failed to locate a matching OpenSSL installer"
            exit 1
          }
          
          $installerPath = "$env:TEMP\$installerName"
          Invoke-WebRequest -Uri "$installerUrl" -OutFile "$installerPath"
          
          Write-Host "üîê Verifying SHA512 checksum..."
          $local_file_hash = (Get-FileHash -Path "$installerPath" -Algorithm SHA512).Hash
          
          if ($local_file_hash -ne $distributor_file_hash) {
            Write-Host "Expected: $distributor_file_hash"
            Write-Host "Actual:   $local_file_hash"
            throw '‚ùå Checksum verification failed!'
          }
          
          Write-Host "‚úÖ Checksum OK. Installing OpenSSL..."
          $installerArgs = '/silent', '/sp-', '/suppressmsgboxes', "/DIR=`"$installDir`""
          Start-Process -FilePath "$installerPath" -ArgumentList $installerArgs -Wait
          
          # Update PATH
          $env:Path = "$installDir\bin;$env:Path"
          
          Write-Host "‚úÖ OpenSSL installed to $installDir"
          "@
          
              # Write and execute the script
              $script | Out-File -FilePath install-openssl.ps1 -Encoding ascii
              .\install-openssl.ps1
          
    - name: Install dependencies
      run: |
        choco install nsis --x86 --force -y
        mkdir C:\files
        xcopy "C:\Program Files\OpenSSL" C:\files /E /I /Q
        dir "C:\files"

    - name: Show Qt Install Info
      run: |
        echo Compiler location:
        where gcc
        where g++
        echo CMake version:
        cmake --version

    - name: Configure CMake
      run: |
          dir "C:\files"
          mkdir build
          cd build
          cmake .. -G "MinGW Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_C_COMPILER="C:/a/OpenHD-ImageWriter/Qt/Tools/mingw810_32/bin/gcc.exe" ^
            -DCMAKE_CXX_COMPILER="C:/a/OpenHD-ImageWriter/Qt/Tools/mingw810_32/bin/g++.exe" ^
            -DOPENSSL_ROOT_DIR="C:/files" ^
            -DOPENSSL_INCLUDE_DIR="C:/files/include" ^
            -DOPENSSL_LIBRARIES="C:/files/lib/libcrypto.lib;C:/files/lib/libssl.lib"

    - name: Check CMake Cache
      run: |
        dir build
        type build\CMakeCache.txt || echo "Cache missing"

    - name: Build with Debug Output
      run: |
        set PATH=C:/a/OpenHD-ImageWriter/Qt/5.15.2/mingw81_32/bin;C:/a/OpenHD-ImageWriter/Qt/Tools/mingw810_32/bin;%PATH%
        cd build
        cmake --build . --verbose
        dir

    - name: Install NSIS
      run: choco install nsis -y

    - name: Build NSIS Installer
      run: |
        "C:\Program Files (x86)\NSIS\makensis.exe" openhdimagewriter.nsi
      working-directory: src/build


    - name: Upload Installer
      uses: actions/upload-artifact@v4
      with:
        name: OpenHDImageWriter-Build-Full
        path: C:\a\OpenHD-ImageWriter\OpenHD-ImageWriter\src\build\OpenHD-ImageWriter*
        if-no-files-found: error
      