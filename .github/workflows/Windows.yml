name: OpenHD Image Writer Windows

on:
  push:
    branches:
      - "2.5-evo"
      - "dev-release"
      - "release"
      - "debug"
      - "master"
    paths-ignore:
      - '**.md'
      - '**.asciidoc'
      - '**.adoc'
      - '.gitignore'
      - 'LICENSE'

env:
  BUILD_TYPE: Release
  QT_VERSION: '5.15.2'
  VCPKG_DIR: D:/a/vcpkg  # Temporärer Pfad für vcpkg im Runner

jobs:
  build:
    runs-on: windows-latest

    defaults:
      run:
        shell: cmd
        working-directory: src

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Qt (MSVC 2019)
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          target: desktop
          arch: win64_msvc2019_64  # Qt für MSVC verwenden
          setup-python: true

      - name: Install vcpkg und OpenSSL
        run: |
          git clone https://github.com/microsoft/vcpkg
          .\vcpkg\bootstrap-vcpkg.bat -disableMetrics
          .\vcpkg\vcpkg install openssl:x64-windows zlib
          echo "VCPKG_ROOT=%cd%\vcpkg" >> %GITHUB_ENV%
          echo "CMAKE_TOOLCHAIN_FILE=%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake" >> %GITHUB_ENV%

      - name: Install dependencies
        run: |
          choco install -y nsis 
          echo "Qt_DIR=%QT_PATH%" >> %GITHUB_ENV%

      - name: Configure CMake mit MSVC und vcpkg
        run: |
          cmake -B build -G "Visual Studio 17 2022" ^
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} ^
            -DCMAKE_PREFIX_PATH="${{ env.QT_DIR }}/${{ env.QT_VERSION }}/msvc2019_64" ^
            -DCMAKE_TOOLCHAIN_FILE="${{ env.CMAKE_TOOLCHAIN_FILE }}" ^
            -DVCPKG_TARGET_TRIPLET=x64-windows


      - name: Build project
        run: |
          cmake --build build --config ${{ env.BUILD_TYPE }} --target ALL_BUILD -j 4

      - name: Run windeployqt
        run: |
          cd build/${{ env.BUILD_TYPE }}
          "${{ env.QT_DIR }}/${{ env.QT_VERSION }}/msvc2019_64/bin/windeployqt.exe" OpenHDImageWriter.exe ^
            --no-translations ^
            --qmldir "$GITHUB_WORKSPACE/src" ^
            --compiler-runtime

      - name: Create NSIS installer
        run: |
          cd build
          makensis -DCMAKE_BINARY_DIR="$GITHUB_WORKSPACE/src/build/${{ env.BUILD_TYPE }}" ^
            -DPROJECT_NAME="OpenHDImageWriter" ^
            -DIMAGER_VERSION_STR="${{ env.IMAGER_VERSION_STR }}" ^
            openhdimagewriter.nsi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: OpenHD-Image-Writer-Windows
          path: |
            src/build/${{ env.BUILD_TYPE }}/OpenHDImageWriter.exe
            src/build/*.exe
            src/build/*.nsis
          if-no-files-found: error
